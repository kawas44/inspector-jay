Release notes
-------------

v0.3
----

* New feature - Inspectors can now be configured with keyword arguments (see gui.clj/default-options)
* New feature - An inspector can now optionally pause the current thread. Execution is resumed when either
  clicking the resume button, or closing the inspector.
  For example: (inspect an-object :pause true)
* New feature - When calling inspect, it can be added to a window with a specific name.
  This is useful to create groups of inspector tabs.
  For example: (inspect 1 :window-name "Numbers")(inspect 2 :window-name "Numbers")(inspect "Hello" :window-name "Strings")
  This creates two windows named "Numbers" and "Strings", where the Numbers window has two inspector tabs.
* New feature - The tree node that was last selected can be accessed via the last-selected-value function.
  This is useful, for example, when you need quick access to a certain node in the REPL.
* Bug fixed - Exception when creating inspectors in rapid succession.

v0.2.5
------

* New feature - Open the selected node in a new inspector
* New feature - Use the :vars option to pass variables into an inspector. 
  For example: (inspect an-object :vars {:foo (new Object) :bar 314}) 
  When entering parameter values in the inspector, you can access this map as the "vars" variable.  
* New feature - Tabs can be closed with Ctrl+w
* Change - A maximum number of tabs is enforced. Whenever you open a tab too many, the first one is closed.
* Change - Now using the core.memoize library, so our memoization cache is cleared when closing an inspector
* Bug fixed - Exception when inspecting a collection with 1 item, or items with a nil value

v0.2
----

* New feature - Support for tabs; whenever inspect is called, the inspector is opened as a new tab
* New feature - Added filtering menu (show/hide public/protected/private/static/inherited members)
* New feature - Added search-as-you-type text field
* New feature - Sort members alphabetically
* New feature - Toggle horizontal/vertical layout
* New feature - Re-invoke methods that have already been called (so you can e.g. enter different parameter values)
* New feature - Added refresh button (so you can see changes to the object's state)
* Bug fixed - Exception when inspecting an empty list or nil
* Bug fixed - Exceptions caught when entering faulty code in parameter text boxes
* Change - Javadoc button opens documentation for declaring class, rather than type of a method's return value

v0.1.5
------

* New feature - Initial support for calling methods with parameters
* New feature - Info panel now lists all elements of collections instead of the collection itself
* Bug fixed - Method nodes returning null are now correctly recognized as leaf nodes
* Bug fixed - Return value was retrieved too early for methods returning a collection
* Change - Native members are now shown as well
* Change - Compiles to Java 6 (instead of Java 7)

v0.1
----

* Initial release
